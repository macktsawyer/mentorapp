{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Dashboard.js","components/UpdateProfile.js","components/Signup.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/CardOne.js","components/FrontPage.js","components/FrontLoggedIn.js","components/Results.js","components/DisplayedMessages.js","components/Inbox.js","components/App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateProfile","screenName","displayName","updatePicture","picURL","photoURL","Provider","Dashboard","error","setError","history","useHistory","userInfo","setUserInfo","userDesc","setUserDesc","userID","uid","sleep","ms","Promise","r","setTimeout","a","push","ref","collection","doc","get","docs","langInfo","forEach","langData","data","languages","description","console","log","fetchInfo","Navbar","fixed","variant","className","Nav","Item","Button","href","to","Container","Card","Body","Alert","alt","style","height","src","map","i","listStyle","onClick","UpdateProfile","emailRef","useRef","passwordRef","passwordConfirmRef","screenRef","picRef","proLoading","setProLoading","profileInfo","setProfileInfo","document","memberInfo","resultData","Row","Form","onSubmit","e","preventDefault","promises","current","all","then","catch","finally","Group","id","Label","Control","type","required","defaultValue","placeholder","disabled","initialValues","position","values","set","displayname","userphoto","handleSubmit","Col","name","as","maxLength","Signup","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","CardOne","Img","FrontPage","Brand","size","FrontPageLogged","searchValue","setSearchValue","pathname","search","state","onChange","target","Results","searchResults","setSearchResults","location","useLocation","searchCrit","where","onSnapshot","querySnapshot","queryResults","width","DisplayedMessages","Inbox","partnerUID","setPartnerUID","partners","setPartners","fetchDisplay","useCallback","quickSnapshot","messageInfo","messageData","fetchMessages","xs","InputGroup","FormControl","App","minHeight","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ceee6e9.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n  });\r\n\r\nconst db = firebase.firestore(); // db established as firestore variable for ease of use\r\n\r\nexport const auth = app.auth() // auth established as firebase auth variable for ease of use\r\nexport default app\r\nexport { db };","import React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../firebase'\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email);\r\n    }\r\n\r\n    function updateProfile(screenName) {\r\n        return currentUser.updateProfile({\r\n            displayName: screenName,\r\n        })\r\n    }\r\n\r\n    function updatePicture(picURL) {\r\n        return currentUser.updateProfile({\r\n            photoURL: picURL\r\n        })\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword,\r\n        updateProfile,\r\n        updatePicture\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Alert, Navbar, Nav, Container } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { db } from '../firebase';\r\n\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const { currentUser, logout } = useAuth();\r\n    const history = useHistory();\r\n    const [userInfo, setUserInfo] = useState([]);\r\n    const [userDesc, setUserDesc] = useState('');\r\n    const userID = currentUser.uid;\r\n    const sleep = (ms) => new Promise((r) => setTimeout(r, ms));\r\n\r\n    useEffect(() => {\r\n        const fetchInfo = async () => {\r\n            try {\r\n                setLoading(true);\r\n                await sleep(500); //Sleep needed to slow things down\r\n                const ref = db.collection('userinfo').doc(`${userID}`);\r\n                const docs = await ref.get();\r\n                let langInfo = [];\r\n                [docs].forEach((doc) => { //Promise needs an array to push fetched info\r\n                    let langData = doc.data();\r\n                    langInfo.push(langData.languages);\r\n                    setUserDesc(langData.description);\r\n                });\r\n                setUserInfo(langInfo[0]); //Set state to conditionally render later\r\n            } catch (error) {\r\n                console.log(\"error: \", error);\r\n            }\r\n        };\r\n        fetchInfo();\r\n        setLoading(false); //Set loading to false in order to allow async conditional loading of info in state\r\n    }, [userID, userInfo])\r\n\r\n    // Function to handle logout\r\n    async function handleLogout() {\r\n        setError('')\r\n\r\n        try {\r\n            await logout();\r\n            history.push('/front-page')\r\n        } catch {\r\n            setError('Failed to log out');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar fixed=\"top\" variant=\"pills\" className=\"me-2 justify-content-end\">\r\n                <Nav.Item className=\"ms-2 me-2 mb-2\">\r\n                    <Button href=\"/inbox\" variant=\"outline-info\" to=\"/inbox\">Inbox</Button>\r\n                </Nav.Item>\r\n                <Nav.Item className=\"ms-2 me-2 mb-2\">\r\n                    <Button href=\"/front-page-logged\" variant=\"outline-info\" to=\"/front-page\">Home</Button>\r\n                </Nav.Item>\r\n            </Navbar>\r\n            <Container className=\"d-flex justify-content-center\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <h2 className=\"text-center mb-4\">{currentUser.displayName}'s Profile</h2>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <img alt=\"display\" className=\"justify-content-center mb-2\" style={{height: \"50px\"}} src={currentUser.photoURL}></img>\r\n                        </div>\r\n                        <br />\r\n                        <strong className=\"mt-2\">Email:</strong> {currentUser.email}\r\n                        <br />\r\n                        <strong>Display Name: </strong> {currentUser.displayName}\r\n                        <h5 className=\"text-center mt-3\">Languages I'm looking to learn:</h5>\r\n                        <div className=\"text-center mt-3\">\r\n                            <div>\r\n                                { loading ? \"Loading...\" : userInfo.map((i) => { //Conditionally rendering and listing of profile info\r\n                                    return <li key={`${i}`} style ={{listStyle:'none'}}>{i}</li>\r\n                                }) }\r\n                                <br />\r\n                                <h5>About me:</h5>\r\n                                { userDesc }\r\n                            </div>\r\n                        </div>\r\n                        <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mb-2 mt-4\">Update Profile</Link>\r\n                    </Card.Body>\r\n                </Card>                \r\n            </Container>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Form, Button, Card, Alert, Container, Row, Col } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Formik, Field } from 'formik';\r\nimport { db } from '../firebase';\r\n\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const screenRef = useRef();\r\n    const picRef = useRef();\r\n    const { currentUser, updatePassword, updateEmail, updateProfile, updatePicture } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [proLoading, setProLoading] = useState(false);\r\n    const [profileInfo, setProfileInfo] = useState('');\r\n    const history = useHistory();\r\n    const userID = currentUser.uid;\r\n    const document = db.collection('userinfo').doc(userID);\r\n    const sleep = (ms) => new Promise((r) => setTimeout(r, ms));\r\n\r\n    useEffect(() => {\r\n        const fetchInfo = async () => {\r\n            try {\r\n                setLoading('true');\r\n                await sleep(1000); //Sleep needed to slow things down\r\n                const ref = db.collection('userinfo').doc(`${userID}`);\r\n                const docs = await ref.get();\r\n                let memberInfo = [];\r\n                [docs].forEach((doc) => { //Promise needs an array to push fetched info\r\n                    let resultData = doc.data();\r\n                    memberInfo.push(resultData);\r\n                });\r\n                setProfileInfo(memberInfo); //Set state to conditionally render later\r\n            } catch (error) {\r\n                console.log(\"error: \", error);\r\n            }\r\n        };\r\n        fetchInfo();\r\n        setLoading('false'); //Set loading to false in order to allow async conditional loading of info in state\r\n    }, [userID, profileInfo])\r\n\r\n    function handleUpdate(e) {\r\n        e.preventDefault();\r\n\r\n        const promises = []; \r\n        setProLoading('true');\r\n        setError('');\r\n        if (emailRef.current.value !== currentUser.email) { //Ensure email isn't already being used\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if (screenRef.current.value !== currentUser.displayName) { //Ensure display name isn't the same as current\r\n            promises.push(updateProfile(screenRef.current.value))\r\n        }\r\n        if (picRef.current.value !== currentUser.photoURL) {\r\n            promises.push(updatePicture(picRef.current.value))\r\n        }\r\n        if(passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        \r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(() => {\r\n        setError('Failed to update account')}).finally(() =>\r\n        setProLoading('false'))\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match');\r\n        }\r\n        if (screenRef.current.value === currentUser.displayName) {\r\n            return setError('Choose a new display name')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"w-100\">\r\n                <Row>\r\n                    <Container className=\"w-50\">\r\n                        <Card className=\"d-flex justify-content-center\">\r\n                            <Card.Body>\r\n                                <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Form className=\"w-50 text-center\" onSubmit={handleUpdate}>\r\n                                        <Form.Group id=\"email\">\r\n                                            <Form.Label><strong>Email</strong></Form.Label>\r\n                                            <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label><strong>Display Name</strong></Form.Label>\r\n                                            <Form.Control type=\"text\" ref={screenRef} defaultValue={currentUser.displayName} placeholder=\"Display Name\"></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label><strong>Display Picture URL</strong></Form.Label>\r\n                                            <Form.Control type=\"text\" ref={picRef} defaultValue={currentUser.photoURL} placeholder=\"Display Picture URL\"></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group id=\"password\">\r\n                                            <Form.Label><strong>Password</strong></Form.Label>\r\n                                            <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Keep blank to remain the same\" />\r\n                                        </Form.Group>\r\n                                        <Form.Group id=\"password-confirm\">\r\n                                            <Form.Label><strong>Password Confirmation</strong></Form.Label>\r\n                                            <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Keep blank to remain the same\" />\r\n                                        </Form.Group>\r\n                                        <div className=\"text-center\">\r\n                                            <Button disabled={proLoading} className=\"w-40 mt-2\" type=\"submit\">Update Profile</Button>\r\n                                        </div>\r\n                                    </Form>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Container>\r\n                    <Container className=\"w-50\">\r\n                        <Card>\r\n                            <Card.Body> \r\n                                <Formik initialValues={{ languages: [], description: '', position: '' }} onSubmit={async (values) => {\r\n                                    await sleep(500);\r\n                                    document.set({ \r\n                                        languages: values.languages,  //Formik sets the db values as input by users\r\n                                        uid: `${currentUser.uid}`,      // after having loaded them into initial values\r\n                                        position: values.position,          // automagically by using pre-made onsubmit functions\r\n                                        description: values.description,\r\n                                        displayname: `${currentUser.displayName}`,\r\n                                        userphoto: `${currentUser.photoURL}`\r\n                                    }).then(() => {\r\n                                        history.push('/') //Push dashboard upon update of info\r\n                                    })\r\n                                    console.log(values)\r\n                                    }}>\r\n                                    {({ values, handleSubmit }) => (\r\n                                    <Form className=\"text-center mt-4\" onSubmit={handleSubmit}>\r\n                                        <Form.Group>\r\n                                            <h4 className=\"mb-4\">What languages do you want to learn?</h4>\r\n                                            <Container>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Form.Label className=\"me-1\">Javascript-</Form.Label>\r\n                                                        <Field className=\"me-1\" type=\"checkbox\" name=\"languages\" value=\"Javascript\"></Field>\r\n                                                        <br />\r\n                                                        <Form.Label className=\"me-1\">Python-</Form.Label>\r\n                                                        <Field className=\"me-1\" type=\"checkbox\" name=\"languages\" value=\"Python\"></Field>\r\n                                                        <br />\r\n                                                        <Form.Label className=\"me-1\">Ruby-</Form.Label>\r\n                                                        <Field className=\"me-1\" type=\"checkbox\" name=\"languages\" value=\"Ruby\"></Field>\r\n                                                        <br />\r\n                                                        <Form.Label className=\"me-1\">Java-</Form.Label>\r\n                                                        <Field className=\"me-1\" type=\"checkbox\" name=\"languages\" value=\"Java\"></Field>\r\n                                                        <br />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Form.Label className=\"me-1\">C-</Form.Label>\r\n                                                        <Field className=\"me-1\" type=\"checkbox\" name=\"languages\" value=\"C\"></Field>\r\n                                                        <br />\r\n                                                        <Form.Label className=\"me-1\">C++-</Form.Label>\r\n                                                        <Field className=\"me-1\" type=\"checkbox\" name=\"languages\" value=\"C++\"></Field>\r\n                                                        <br />\r\n                                                        <Form.Label className=\"me-1\">C#-</Form.Label>\r\n                                                        <Field className=\"me-1\" type=\"checkbox\" name=\"languages\" value=\"C#\"></Field>\r\n                                                        <br />\r\n                                                        <Form.Label className=\"me-1\">PHP-</Form.Label>\r\n                                                        <Field className=\"me-1\" type=\"checkbox\" name=\"languages\" value=\"PHP\"></Field>\r\n                                                        <br />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <br />\r\n                                                <h4 className=\"mb-4\">Are you a student, mentor or both?</h4>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                    <Form.Label className=\"me-1\">Student -</Form.Label>\r\n                                                    <Field className=\"me-1\" type=\"checkbox\" name=\"position\" value=\"student\"></Field>\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                    <Form.Label className=\"me-1\">Mentor -</Form.Label>\r\n                                                    <Field className=\"me-1\" type=\"checkbox\" name=\"position\" value=\"mentor\"></Field>\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                    <Form.Label className=\"me-1\">Both -</Form.Label>\r\n                                                    <Field className=\"me-1\" type=\"checkbox\" name=\"position\" value=\"both\"></Field>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <br />\r\n                                                <Row>\r\n                                                <h4 className=\"mb-4\">Tell us a bit about yourself!</h4>\r\n                                                    <Form.Control as=\"textarea\" \r\n                                                    id=\"description\" \r\n                                                    maxLength=\"300\" \r\n                                                    name=\"description\" \r\n                                                    type=\"textarea\" \r\n                                                    placeholder=\"Describe Yourself\"\r\n                                                    defaultValue={profileInfo[0].description}>\r\n\r\n                                                    </Form.Control>\r\n                                                </Row>\r\n                                            </Container>\r\n                                        </Form.Group>\r\n                                        <div className=\"text-center mt-2\">\r\n                                            <Button type=\"submit\">Update Profile</Button>\r\n                                        </div>\r\n                                    </Form>\r\n                                    )}\r\n                                </Formik>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Container>\r\n                </Row>\r\n            </Container>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { auth } from '../firebase'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { db } from '../firebase';\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { signup } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match');\r\n        }\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value);\r\n            auth.onAuthStateChanged((user) => {\r\n                if (user) {\r\n                    let uid = user.uid;\r\n                    db.collection('userinfo').doc(`${uid}`).set({ \r\n                        languages: [\"unset\"],\r\n                        uid: `${uid}`, //Working on establishing default values\r\n                        description: 'Please update profile',\r\n                        userphoto: 'https://static.libertyprim.com/files/varietes/pomme-akane-large.jpg?1569320193',\r\n                        displayname: 'Newman',\r\n                        position: 'both'\r\n                    }).then(() => {\r\n                        user.updateProfile({\r\n                            displayName: 'Newman',\r\n                            photoURL: 'https://static.libertyprim.com/files/varietes/pomme-akane-large.jpg?1569320193'\r\n                        })})\r\n                } else {\r\n                    console.log(\"Error with signup\")\r\n                }\r\n            })\r\n            console.log('Document created!')\r\n            history.push('/')\r\n        } catch {\r\n            console.log(error)\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Form className=\"w-50\" onSubmit={handleSubmit}>\r\n                            <Form.Group id=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" ref={emailRef} required />\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" ref={passwordRef} required />\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password-confirm\">\r\n                                <Form.Label>Password Confirmation</Form.Label>\r\n                                <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                            </Form.Group>\r\n                            <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Submit</Button>\r\n                        </Form>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/Login\">Log In</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to sign in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Card className=\"d-flex w-50 justify-content-center\">\r\n                    <Card.Body>\r\n                        <h2 className=\"text-center mb-4\">Login</h2>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group id=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" ref={emailRef} required />\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" ref={passwordRef} required />\r\n                            </Form.Group>\r\n                            <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Login</Button>\r\n                        </Form>\r\n                        <div className=\"w-100 text-center mt-3\">\r\n                            <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/Signup\">Sign up</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}) {\r\n    const { currentUser } = useAuth();\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={props => { // Establishes private route for only signed in users\r\n               return currentUser ? <Component {...props} /> : <Redirect to= \"/front-page\" />\r\n            }}\r\n        >\r\n\r\n        </Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef();\r\n    const { resetPassword } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function handleReset(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        } catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Recover Password</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleReset}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Reset Password</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/Signup\">Sign up</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\nfunction CardOne() {\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Img variant=\"top\" src=\"https://images.pexels.com/photos/4050299/pexels-photo-4050299.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"></Card.Img>\r\n                <Card.Body className=\"text-center\">\r\n                    As a mentor you are not only providing the help a student may need, but you are also working on credentials for your own future. We provide the means to add to your resume a reflection of your teaching rating and history.\r\n                    <Button href=\"/Signup\" className=\"w-100 text-center mt-2\">Get Started</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardOne\r\n","import React from 'react';\r\nimport { Button, Card, Nav, Navbar, Container, Row, Col } from 'react-bootstrap';\r\nimport CardOne from './CardOne';\r\nimport './FrontPage.scss';\r\n\r\nexport default function FrontPage() {\r\n\r\n    return (\r\n        <div>\r\n            <Navbar fixed=\"top\" variant=\"pills\" className=\"w-100 align-items-center\">\r\n                <Container>\r\n                    <Navbar.Brand className=\"mb-2\" href=\"\">MentorShip</Navbar.Brand>\r\n                </Container>\r\n                <Container className=\"justify-content-end\">\r\n                    <Nav.Item>\r\n                        <Button href=\"/Login\" variant=\"outline-info\" size=\"sm\" className=\"ms-2 me-2 mb-2\" to=\"/Login\">Login</Button>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Button href=\"/Signup\" variant=\"outline-info\" size=\"sm\" className=\"ms-1 me-4 mb-2\" to=\"/Signup\">Sign Up</Button>\r\n                    </Nav.Item>\r\n                </Container>\r\n            </Navbar>\r\n            <Container>\r\n                <Card className=\"text-center mb-4\">\r\n                    <Card.Body className=\"mb-1\">\r\n                        Learning to program is difficult. You don't have to do it alone. Often we may seek help only to be told to find our answers on Google. While it is true that we need to develop the skills to problem solve, some answers cannot be found on StackOverflow alone. Sometimes we need a guiding and helping hand.\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n            <Container id=\"cardContainer\">\r\n                <Row>\r\n                    <Col>\r\n                        < CardOne />\r\n                    </Col>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Img variant=\"top\" src=\"https://images.pexels.com/photos/2173508/pexels-photo-2173508.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"></Card.Img>\r\n                            <Card.Body className=\"text-center\">\r\n                            Students not only have the opportunity to broaden their knowledge but the student will objectively be able to quantify some of their learning experience through their lessons and student rating. \r\n                                <Button href=\"/Signup\" className=\"w-100 text-center mt-2\">Get Started</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Card, Nav, Navbar, Container, Row, Col, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CardOne from './CardOne';\r\nimport './FrontPage.scss';\r\n\r\nexport default function FrontPageLogged() {\r\n    const [ searchValue, setSearchValue ] = useState('');\r\n    const history = useHistory();\r\n\r\n    function handleSearchChange(e) {\r\n        console.log(e)\r\n        setSearchValue(e.target.value); //Store search state\r\n    }\r\n\r\n    function handleSearch() {\r\n        console.log(\"Searching for: \", searchValue)\r\n        history.push({\r\n            pathname: '/results',\r\n            search: searchValue, //Pass search query\r\n            state: searchValue\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar fixed=\"top\" variant=\"pills\" className=\"w-100 align-items-center\">\r\n                <Container>\r\n                    <Navbar.Brand className=\"mb-2\" href=\"\"><h5>MentorShip</h5></Navbar.Brand>\r\n                </Container>\r\n                <Container fixed=\"top\" className=\"d-flex justify-content-center\">\r\n                    <Form className=\"align-items-center w-100\" onSubmit={handleSearch}>\r\n                        <div className=\"d-flex\">\r\n                            <Form.Label className=\"mt-2 w-50\"><h5>What I would like to learn:</h5></Form.Label>\r\n                            <Form.Control \r\n                                className=\"w-50\"\r\n                                as=\"select\"\r\n                                value={searchValue}\r\n                                onChange={handleSearchChange}>\r\n                                <option>\\/ Open to select language \\/</option>\r\n                                <option value=\"Javascript\">Javascript</option>\r\n                                <option value=\"Ruby\">Ruby</option>\r\n                                <option value=\"C\">C</option>\r\n                                <option value=\"C++\">C++</option>\r\n                                <option value=\"C#\">C#</option>\r\n                                <option value=\"Java\">Java</option>\r\n                                <option value=\"Python\">Python</option>\r\n                                <option value=\"PHP\">PHP</option>\r\n                            </Form.Control>\r\n                            <Button variant=\"outline-info\" type=\"submit\">Go!</Button>\r\n                        </div>\r\n                    </Form>\r\n                </Container>\r\n                <Container className=\"justify-content-end\">\r\n                    <Nav.Item>\r\n                        <Button href=\"/\" variant=\"outline-info\" size=\"sm\" className=\"\" to=\"/\">Dashboard</Button>\r\n                    </Nav.Item>\r\n                </Container>\r\n            </Navbar>\r\n            <Container>\r\n                <Card className=\"text-center mb-4\">\r\n                    <Card.Body className=\"mb-1\">\r\n                        Learning to program is difficult. You don't have to do it alone. Often we may seek help only to be told to find our answers on Google. While it is true that we need to develop the skills to problem solve, some answers cannot be found on StackOverflow alone. Sometimes we need a guiding and helping hand.\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n            <Container id=\"cardContainer\">\r\n                <Row>\r\n                    <Col>\r\n                        < CardOne />\r\n                    </Col>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Img variant=\"top\" src=\"https://images.pexels.com/photos/2173508/pexels-photo-2173508.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"></Card.Img>\r\n                            <Card.Body className=\"text-center\">\r\n                            Students not only have the opportunity to broaden their knowledge but the student will objectively be able to quantify some of their learning experience through their lessons and student rating. \r\n                                <Button href=\"/Signup\" className=\"w-100 text-center mt-2\">Get Started</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Card, Nav, Navbar, Container } from 'react-bootstrap';\r\nimport { db } from '../firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction Results() {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const location = useLocation();\r\n    const { currentUser } = useAuth();\r\n    const userInfo = db.collection(\"userinfo\");\r\n    const userID = currentUser.uid;\r\n    const sleep = (ms) => new Promise((r) => setTimeout(r, ms));\r\n    let searchCrit = location.state;\r\n\r\n    // Needs useEffect to render API and needs conditional render like on Dashboard\r\n\r\n    useEffect(() => {\r\n        const fetchInfo = async () => {\r\n            setLoading(true);\r\n            await sleep(1000); //Sleep needed to slow things down\r\n            db.collection('userinfo')\r\n            .where(\"languages\", \"array-contains\", searchCrit)\r\n            .onSnapshot((querySnapshot) => {\r\n                let queryResults = [];\r\n                querySnapshot.forEach((doc) => {\r\n                    queryResults.push(doc.data())\r\n                });\r\n                setSearchResults(queryResults)\r\n            });  \r\n        };\r\n        fetchInfo();\r\n        setLoading(false); //Set loading to false in order to allow async conditional loading of info in state\r\n    }, [userID, userInfo, searchCrit])\r\n\r\n    return (\r\n        <div>\r\n            <Navbar fixed=\"top\" variant=\"pills\">\r\n                <Container className=\"justify-content-end\">\r\n                    <Nav.Item>\r\n                        <Button href=\"/front-page-logged\" variant=\"outline-info\" to=\"/front-page\">Home</Button>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Button href=\"/\" variant=\"outline-info\" size=\"sm\" className=\"ms-2\" to=\"/\">Dashboard</Button>\r\n                    </Nav.Item>\r\n                </Container>\r\n            </Navbar>\r\n            <Card>\r\n                { searchCrit } \r\n                { loading ? \"Loading...\" : searchResults.map((i) => { //Conditionally rendering and listing of profile info\r\n                                    return (\r\n                                    <Card className=\"w-25\">\r\n                                        <img key={`${i.displayname}'s photo`} alt=\"display\" style={{width: \"50px\", height: \"50px\"}} src={i.userphoto}></img>\r\n                                        <h5 key={i.displayname}> {i.displayname} </h5>\r\n                                        <li key={`${i.languages}`} style ={{listStyle:'none'}}>{i.languages}</li>\r\n                                        <p key={`${i.displayname}'s description`}>{i.description}</p>\r\n                                    </Card>\r\n                                    )\r\n                                }) }\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\n\r\nconst DisplayedMessages = () => {\r\n    return (\r\n        <div>\r\n            <h5>Hello</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayedMessages\r\n","import React, { useEffect, useState, useCallback } from 'react'\r\nimport { Card, Col, Row, Navbar, Nav, Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { db } from '../firebase';\r\nimport DisplayedMessages from './DisplayedMessages';\r\n\r\nfunction Inbox() {\r\n    const sleep = (ms) => new Promise((r) => setTimeout(r, ms));\r\n    const [loading, setLoading] = useState(false);\r\n    const [partnerUID, setPartnerUID] = useState();\r\n    const [partners, setPartners] = useState([]);\r\n    const { currentUser } = useAuth();\r\n    const userID = currentUser.uid;    \r\n\r\n    const fetchDisplay = useCallback( async (partnerUID) => {\r\n        try {\r\n            setLoading(true);\r\n            await sleep(2000); //Sleep needed to slow things down\r\n            let queryResults = [];\r\n            for (let i of partnerUID) {\r\n                db.collection('userinfo') // Search for document of specific users as found in fetch messages\r\n                .where(\"uid\", \"==\", i)\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    let quickSnapshot = [];\r\n                    querySnapshot.forEach((doc) => {\r\n                        quickSnapshot.push(doc.data())\r\n                    })\r\n                    queryResults.push(quickSnapshot[0].displayname) // Add users to a list of users who have message currentUser\r\n                })\r\n            setPartners(queryResults)\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error: \", error);\r\n        }\r\n        setLoading(false)\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                setLoading(true);\r\n                await sleep(2000); //Sleep needed to slow things down\r\n                const ref = db.collection('messages').doc(`${userID}`);\r\n                const docs = await ref.get();\r\n                let messageInfo = [];\r\n                [docs].forEach((doc) => { //Promise needs an array to push fetched info\r\n                    let messageData = doc.data();\r\n                    for (let i in messageData) {\r\n                        messageInfo.push(i)\r\n                    }\r\n                });\r\n                setPartnerUID(messageInfo)\r\n            } catch (error) {\r\n                console.log(\"error: \", error);\r\n            }\r\n        };\r\n        fetchMessages();\r\n        if (partnerUID) { // If partnerUID is present, then call on the inbox display\r\n            fetchDisplay(partnerUID)\r\n        }\r\n        setLoading(false); //Set loading to false in order to allow async conditional loading of info in state\r\n    }, [userID, fetchDisplay, partnerUID, partners, loading])\r\n\r\n    return (\r\n        <div>\r\n            <Navbar fixed=\"top\" variant=\"pills\" className=\"me-2 justify-content-end\">\r\n                <Nav.Item className=\"ms-2 me-2 mb-2\">\r\n                    <Button href=\"/front-page-logged\" variant=\"outline-info\" to=\"/front-page\">Home</Button>\r\n                </Nav.Item>\r\n            </Navbar>\r\n            <h3 className=\"text-center\">Inbox</h3>\r\n            <Card>\r\n                <Row>\r\n                    <Col xs=\"4\">\r\n                    <Card className=\"text-center\"><h4>Messages</h4></Card>\r\n                    { loading ? \"Loading...\" : partners.map((i) => { //Conditionally rendering and listing of message partners\r\n                                    return (\r\n                                    <Card key={i} className=\"text-center justify-content-center mt-2 h-50 w-100\">\r\n                                        <h5 key={i.id}> {i} </h5>\r\n                                    </Card>\r\n                                    )\r\n                                }) }\r\n                    </Col>\r\n                    <Col xs=\"8\">\r\n                    <Card className=\"text-center\">\r\n                    <h4>\r\n                    Message Content\r\n                    </h4>\r\n                    < DisplayedMessages />\r\n                    <Card>\r\n                    <InputGroup fixed=\"bottom\">\r\n                        <FormControl placeholder=\"Send a new message\" />\r\n                        <Button variant=\"outline-secondary\">Send</Button>\r\n                    </InputGroup>\r\n                    </Card>\r\n                    </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inbox\r\n","import '../App.scss';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport { AuthProvider } from '../contexts/AuthContext';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport UpdateProfile from './UpdateProfile';\nimport Signup from './Signup';\nimport Login from './Login';\nimport PrivateRoute from \"./PrivateRoute\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport FrontPage from \"./FrontPage\";\nimport FrontPageLogged from \"./FrontLoggedIn\";\nimport Results from \"./Results\";\nimport Inbox from \"./Inbox\";\n\nfunction App() {\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}>\n      <div className=\"w-100\">\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <PrivateRoute path=\"/mentorapp/#/update-profile\" component={UpdateProfile} />\n              <PrivateRoute path=\"/mentorapp/#/front-page-logged\" component={FrontPageLogged} />\n              <PrivateRoute path=\"/mentorapp/#/inbox\" component={Inbox} />              \n              <Route path=\"/mentorapp/#/signup\" component={Signup} />\n              <Route path=\"/mentorapp/#/results\" component={Results} />\n              <Route path=\"/mentorapp/#/login\" component={Login} />\n              <Route path=\"/mentorapp/#/forgot-password\" component={ForgotPassword} />\n              <Route path=\"/front-page\" component={FrontPage} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}